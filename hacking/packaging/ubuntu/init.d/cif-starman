#!/bin/bash
#
# /etc/init.d/cif-starman -- startup script
#
### BEGIN INIT INFO
# Provides:          cif-starman
# Required-Start:    $network $named
# Required-Stop:     $network $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Starts starman for cif
# Description:       Starts starman using start-stop-daemon
### END INIT INFO

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=cif-starman
DESC="cif-starman"
DEBUG=""
WORKERS=16
APP=/opt/cif/bin/cif.psgi
INTERVAL=5
USER=www-data
GROUP=www-data
LOG_DIR=/var/log
DAEMON=/usr/bin/starman
PORT=5000
STARMAN_REQUESTS="1"

if [ `id -u` -ne 0 ]; then
    echo "You need root privileges to run this script"
    exit 1
fi

. /lib/lsb/init-functions

if [ -r /etc/default/rcS ]; then
    . /etc/default/rcS
fi

if [ -r /etc/default/cif-starman ]; then
	. /etc/default/cif-starman
fi

LOG_FILE=$LOG_DIR/cif-starman.log

# configuration file
CONF_FILE=$CONF_DIR/cif-starman.conf

# Define other required variables
PID_FILE=/var/run/$NAME.pid

# Check DAEMON exists
test -x $DAEMON || exit 0

DAEMON_OPTS="--user $USER --group $GROUP --workers $WORKERS --port $PORT --error-log $LOG_FILE --max-requests $STARMAN_REQUESTS --disable-keepalive $APP"

case "$1" in
  start)
    log_daemon_msg "Starting $DESC"

    pid=`pidofproc -p $PID_FILE starman`
    if [ -n "$pid" ] ; then
        log_begin_msg "Already running."
        log_end_msg 0
        exit 0
    fi

    # Prepare environment
#    mkdir -p $LOG_DIR && chown "$USER":"$GROUP" $LOG_DIR
    touch $LOG_FILE && chown "$USER":"$GROUP" $LOG_FILE

    # Start Daemon
    start-stop-daemon -b -m --start --pidfile "$PID_FILE" -c "$USER" --exec $DAEMON -- $DAEMON_OPTS
    log_end_msg $?
    ;;      
  stop)
    log_daemon_msg "Stopping $DESC"

    if [ -f "$PID_FILE" ]; then 
        start-stop-daemon --stop --pidfile "$PID_FILE" \
            --user "$USER" \
            --retry=TERM/20/KILL/5 >/dev/null
        if [ $? -eq 1 ]; then
            log_progress_msg "$DESC is not running but pid file exists, cleaning up"
        elif [ $? -eq 3 ]; then
            PID="`cat $PID_FILE`"
            log_failure_msg "Failed to stop $DESC (pid $PID)"
            exit 1
        fi
        rm -f "$PID_FILE"
    else
        log_progress_msg "(not running)"
    fi
    log_end_msg 0
    ;;
  status)
    status_of_proc -p $PID_FILE starman starman && exit 0 || exit $?
    ;;
  restart|force-reload)
    if [ -f "$PID_FILE" ]; then
        $0 stop
        sleep 1
    fi
    $0 start
    ;;
  *)
    log_success_msg "Usage: $0 {start|stop|restart|force-reload|status}"
    exit 1
    ;;
esac

exit 0
